{"ast":null,"code":"var _jsxFileName = \"D:\\\\belajar\\\\Udemy\\\\react-complete-guide\\\\practice\\\\food-app-updated\\\\src\\\\components\\\\Meals\\\\AvailableMeals.js\",\n    _s = $RefreshSig$();\n\nimport Card from '../UI/Card';\nimport MealItem from './MealItem/MealItem';\nimport classes from './AvailableMeals.module.css';\nimport { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AvailableMeals = () => {\n  _s();\n\n  const [meals, setMeals] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [httpError, setHttpError] = useState();\n  useEffect(() => {\n    //harus gini soalnya gabisa kalo async di useEffect\n    //kalo ngambil data dari db harusnya di useeffect terus\n    const fetchMeals = async () => {\n      setIsLoading(true);\n      const DUMMY_MEALS = await fetch('https://practice-841a5-default-rtdb.firebaseio.com/meals');\n\n      if (!DUMMY_MEALS.ok) {\n        throw new Error('Somethin wrong');\n      }\n\n      const data = await DUMMY_MEALS.json();\n      const mealsList = [];\n\n      for (const key in data) {\n        mealsList.push({\n          id: key,\n          key: key,\n          name: data[key].name,\n          description: data[key].description,\n          price: data[key].price\n        });\n      }\n\n      setMeals(mealsList);\n      setIsLoading(false);\n    };\n\n    try {\n      fetchMeals();\n    } catch (err) {\n      setIsLoading(false);\n      setHttpError(err.message);\n    }\n  }, []); //only run when the components run first time\n  //map itu buat array\n\n  const mealsList = meals.map(meal => /*#__PURE__*/_jsxDEV(MealItem, {\n    id: meal.id,\n    name: meal.name,\n    description: meal.description,\n    price: meal.price\n  }, meal.id, false, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this));\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: classes.meals,\n    children: [isLoading && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: classes.MealsLoading,\n      children: \"Is Loading....\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 19\n    }, this), httpError && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: classes.MealsError,\n      children: httpError\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 19\n    }, this), !isLoading && /*#__PURE__*/_jsxDEV(Card, {\n      children: /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: mealsList\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 20\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AvailableMeals, \"c5ccDIV18sDKquamUmi+RM1Sgto=\");\n\n_c = AvailableMeals;\nexport default AvailableMeals;\n\nvar _c;\n\n$RefreshReg$(_c, \"AvailableMeals\");","map":{"version":3,"names":["Card","MealItem","classes","useEffect","useState","AvailableMeals","meals","setMeals","isLoading","setIsLoading","httpError","setHttpError","fetchMeals","DUMMY_MEALS","fetch","ok","Error","data","json","mealsList","key","push","id","name","description","price","err","message","map","meal","MealsLoading","MealsError"],"sources":["D:/belajar/Udemy/react-complete-guide/practice/food-app-updated/src/components/Meals/AvailableMeals.js"],"sourcesContent":["import Card from '../UI/Card';\nimport MealItem from './MealItem/MealItem';\nimport classes from './AvailableMeals.module.css';\nimport { useEffect,useState } from 'react';\n\n\nconst AvailableMeals = () => {\n  const [meals,setMeals] = useState([])\n  const [isLoading,setIsLoading] = useState(false)\n  const [httpError,setHttpError] = useState()\n\n  useEffect(()=> {\n    //harus gini soalnya gabisa kalo async di useEffect\n    //kalo ngambil data dari db harusnya di useeffect terus\n    const fetchMeals = async () => {\n      setIsLoading(true)\n      const DUMMY_MEALS = await fetch('https://practice-841a5-default-rtdb.firebaseio.com/meals')\n\n      if(!DUMMY_MEALS.ok){\n        throw new Error('Somethin wrong')\n      }\n      const data = await DUMMY_MEALS.json()      \n      \n      const mealsList = [];\n\n      for (const key in data){\n        mealsList.push({\n          id:key,\n          key:key,\n          name:data[key].name,\n          description:data[key].description,\n          price:data[key].price,\n        })\n      }\n      setMeals(mealsList)\n      setIsLoading(false)\n    }\n\n    try {\n      fetchMeals();\n    } catch (err) {\n      setIsLoading(false)\n      setHttpError(err.message)\n    }\n\n  },[]) //only run when the components run first time\n\n  //map itu buat array\n  const mealsList = meals.map((meal) => (\n    <MealItem\n      key={meal.id}\n      id={meal.id}\n      name={meal.name}\n      description={meal.description}\n      price={meal.price}\n    />\n  ));\n\n  return (\n    <section className={classes.meals}>\n      {isLoading&&<p className={classes.MealsLoading}>Is Loading....</p>}\n      {httpError&&<p className={classes.MealsError}>{httpError}</p>}\n      {!isLoading&&<Card>\n        <ul>{mealsList}</ul>\n      </Card>}\n    </section>\n  );\n};\n\nexport default AvailableMeals;\n"],"mappings":";;;AAAA,OAAOA,IAAP,MAAiB,YAAjB;AACA,OAAOC,QAAP,MAAqB,qBAArB;AACA,OAAOC,OAAP,MAAoB,6BAApB;AACA,SAASC,SAAT,EAAmBC,QAAnB,QAAmC,OAAnC;;;AAGA,MAAMC,cAAc,GAAG,MAAM;EAAA;;EAC3B,MAAM,CAACC,KAAD,EAAOC,QAAP,IAAmBH,QAAQ,CAAC,EAAD,CAAjC;EACA,MAAM,CAACI,SAAD,EAAWC,YAAX,IAA2BL,QAAQ,CAAC,KAAD,CAAzC;EACA,MAAM,CAACM,SAAD,EAAWC,YAAX,IAA2BP,QAAQ,EAAzC;EAEAD,SAAS,CAAC,MAAK;IACb;IACA;IACA,MAAMS,UAAU,GAAG,YAAY;MAC7BH,YAAY,CAAC,IAAD,CAAZ;MACA,MAAMI,WAAW,GAAG,MAAMC,KAAK,CAAC,0DAAD,CAA/B;;MAEA,IAAG,CAACD,WAAW,CAACE,EAAhB,EAAmB;QACjB,MAAM,IAAIC,KAAJ,CAAU,gBAAV,CAAN;MACD;;MACD,MAAMC,IAAI,GAAG,MAAMJ,WAAW,CAACK,IAAZ,EAAnB;MAEA,MAAMC,SAAS,GAAG,EAAlB;;MAEA,KAAK,MAAMC,GAAX,IAAkBH,IAAlB,EAAuB;QACrBE,SAAS,CAACE,IAAV,CAAe;UACbC,EAAE,EAACF,GADU;UAEbA,GAAG,EAACA,GAFS;UAGbG,IAAI,EAACN,IAAI,CAACG,GAAD,CAAJ,CAAUG,IAHF;UAIbC,WAAW,EAACP,IAAI,CAACG,GAAD,CAAJ,CAAUI,WAJT;UAKbC,KAAK,EAACR,IAAI,CAACG,GAAD,CAAJ,CAAUK;QALH,CAAf;MAOD;;MACDlB,QAAQ,CAACY,SAAD,CAAR;MACAV,YAAY,CAAC,KAAD,CAAZ;IACD,CAtBD;;IAwBA,IAAI;MACFG,UAAU;IACX,CAFD,CAEE,OAAOc,GAAP,EAAY;MACZjB,YAAY,CAAC,KAAD,CAAZ;MACAE,YAAY,CAACe,GAAG,CAACC,OAAL,CAAZ;IACD;EAEF,CAlCQ,EAkCP,EAlCO,CAAT,CAL2B,CAuCrB;EAEN;;EACA,MAAMR,SAAS,GAAGb,KAAK,CAACsB,GAAN,CAAWC,IAAD,iBAC1B,QAAC,QAAD;IAEE,EAAE,EAAEA,IAAI,CAACP,EAFX;IAGE,IAAI,EAAEO,IAAI,CAACN,IAHb;IAIE,WAAW,EAAEM,IAAI,CAACL,WAJpB;IAKE,KAAK,EAAEK,IAAI,CAACJ;EALd,GACOI,IAAI,CAACP,EADZ;IAAA;IAAA;IAAA;EAAA,QADgB,CAAlB;EAUA,oBACE;IAAS,SAAS,EAAEpB,OAAO,CAACI,KAA5B;IAAA,WACGE,SAAS,iBAAE;MAAG,SAAS,EAAEN,OAAO,CAAC4B,YAAtB;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QADd,EAEGpB,SAAS,iBAAE;MAAG,SAAS,EAAER,OAAO,CAAC6B,UAAtB;MAAA,UAAmCrB;IAAnC;MAAA;MAAA;MAAA;IAAA,QAFd,EAGG,CAACF,SAAD,iBAAY,QAAC,IAAD;MAAA,uBACX;QAAA,UAAKW;MAAL;QAAA;QAAA;QAAA;MAAA;IADW;MAAA;MAAA;MAAA;IAAA,QAHf;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AASD,CA7DD;;GAAMd,c;;KAAAA,c;AA+DN,eAAeA,cAAf"},"metadata":{},"sourceType":"module"}