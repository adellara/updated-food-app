{"ast":null,"code":"var _jsxFileName = \"D:\\\\belajar\\\\Udemy\\\\react-complete-guide\\\\practice\\\\food-app-updated\\\\src\\\\components\\\\Meals\\\\AvailableMeals.js\",\n    _s = $RefreshSig$();\n\nimport Card from '../UI/Card';\nimport MealItem from './MealItem/MealItem';\nimport classes from './AvailableMeals.module.css';\nimport { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AvailableMeals = () => {\n  _s();\n\n  const [meals, setMeals] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  useEffect(() => {\n    //harus gini soalnya gabisa kalo async di useEffect\n    //kalo ngambil data dari db harusnya di useeffect terus\n    const fetchMeals = async () => {\n      setIsLoading(true);\n      const DUMMY_MEALS = await fetch('https://practice-841a5-default-rtdb.firebaseio.com/meals.json');\n      const data = await DUMMY_MEALS.json();\n      const mealsList = [];\n\n      for (const key in data) {\n        mealsList.push({\n          id: key,\n          key: key,\n          name: data[key].name,\n          description: data[key].description,\n          price: data[key].price\n        });\n      }\n\n      setMeals(mealsList);\n      setIsLoading(false);\n    };\n\n    fetchMeals();\n  }, []); //only run when the components run first time\n  //map itu buat array\n\n  const mealsList = meals.map(meal => /*#__PURE__*/_jsxDEV(MealItem, {\n    id: meal.id,\n    name: meal.name,\n    description: meal.description,\n    price: meal.price\n  }, meal.id, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this));\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: classes.meals,\n    children: [isLoading && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Is Loading....\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 19\n    }, this), /*#__PURE__*/_jsxDEV(Card, {\n      children: /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: mealsList\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AvailableMeals, \"X4UGABiTAvwBbHKNNhAiWWaGl7I=\");\n\n_c = AvailableMeals;\nexport default AvailableMeals;\n\nvar _c;\n\n$RefreshReg$(_c, \"AvailableMeals\");","map":{"version":3,"names":["Card","MealItem","classes","useEffect","useState","AvailableMeals","meals","setMeals","isLoading","setIsLoading","fetchMeals","DUMMY_MEALS","fetch","data","json","mealsList","key","push","id","name","description","price","map","meal"],"sources":["D:/belajar/Udemy/react-complete-guide/practice/food-app-updated/src/components/Meals/AvailableMeals.js"],"sourcesContent":["import Card from '../UI/Card';\nimport MealItem from './MealItem/MealItem';\nimport classes from './AvailableMeals.module.css';\nimport { useEffect,useState } from 'react';\n\n\nconst AvailableMeals = () => {\n  const [meals,setMeals] = useState([])\n  const [isLoading,setIsLoading] = useState(false)\n\n  useEffect(()=> {\n    //harus gini soalnya gabisa kalo async di useEffect\n    //kalo ngambil data dari db harusnya di useeffect terus\n    const fetchMeals = async () => {\n      setIsLoading(true)\n      const DUMMY_MEALS = await fetch('https://practice-841a5-default-rtdb.firebaseio.com/meals.json')\n      const data = await DUMMY_MEALS.json()      \n      const mealsList = [];\n\n      for (const key in data){\n        mealsList.push({\n          id:key,\n          key:key,\n          name:data[key].name,\n          description:data[key].description,\n          price:data[key].price,\n        })\n      }\n      setMeals(mealsList)\n      setIsLoading(false)\n    }\n    fetchMeals();\n  },[]) //only run when the components run first time\n\n  //map itu buat array\n  const mealsList = meals.map((meal) => (\n    <MealItem\n      key={meal.id}\n      id={meal.id}\n      name={meal.name}\n      description={meal.description}\n      price={meal.price}\n    />\n  ));\n\n  return (\n    <section className={classes.meals}>\n      {isLoading&&<p>Is Loading....</p>}\n      <Card>\n        <ul>{mealsList}</ul>\n      </Card>\n    </section>\n  );\n};\n\nexport default AvailableMeals;\n"],"mappings":";;;AAAA,OAAOA,IAAP,MAAiB,YAAjB;AACA,OAAOC,QAAP,MAAqB,qBAArB;AACA,OAAOC,OAAP,MAAoB,6BAApB;AACA,SAASC,SAAT,EAAmBC,QAAnB,QAAmC,OAAnC;;;AAGA,MAAMC,cAAc,GAAG,MAAM;EAAA;;EAC3B,MAAM,CAACC,KAAD,EAAOC,QAAP,IAAmBH,QAAQ,CAAC,EAAD,CAAjC;EACA,MAAM,CAACI,SAAD,EAAWC,YAAX,IAA2BL,QAAQ,CAAC,KAAD,CAAzC;EAEAD,SAAS,CAAC,MAAK;IACb;IACA;IACA,MAAMO,UAAU,GAAG,YAAY;MAC7BD,YAAY,CAAC,IAAD,CAAZ;MACA,MAAME,WAAW,GAAG,MAAMC,KAAK,CAAC,+DAAD,CAA/B;MACA,MAAMC,IAAI,GAAG,MAAMF,WAAW,CAACG,IAAZ,EAAnB;MACA,MAAMC,SAAS,GAAG,EAAlB;;MAEA,KAAK,MAAMC,GAAX,IAAkBH,IAAlB,EAAuB;QACrBE,SAAS,CAACE,IAAV,CAAe;UACbC,EAAE,EAACF,GADU;UAEbA,GAAG,EAACA,GAFS;UAGbG,IAAI,EAACN,IAAI,CAACG,GAAD,CAAJ,CAAUG,IAHF;UAIbC,WAAW,EAACP,IAAI,CAACG,GAAD,CAAJ,CAAUI,WAJT;UAKbC,KAAK,EAACR,IAAI,CAACG,GAAD,CAAJ,CAAUK;QALH,CAAf;MAOD;;MACDd,QAAQ,CAACQ,SAAD,CAAR;MACAN,YAAY,CAAC,KAAD,CAAZ;IACD,CAjBD;;IAkBAC,UAAU;EACX,CAtBQ,EAsBP,EAtBO,CAAT,CAJ2B,CA0BrB;EAEN;;EACA,MAAMK,SAAS,GAAGT,KAAK,CAACgB,GAAN,CAAWC,IAAD,iBAC1B,QAAC,QAAD;IAEE,EAAE,EAAEA,IAAI,CAACL,EAFX;IAGE,IAAI,EAAEK,IAAI,CAACJ,IAHb;IAIE,WAAW,EAAEI,IAAI,CAACH,WAJpB;IAKE,KAAK,EAAEG,IAAI,CAACF;EALd,GACOE,IAAI,CAACL,EADZ;IAAA;IAAA;IAAA;EAAA,QADgB,CAAlB;EAUA,oBACE;IAAS,SAAS,EAAEhB,OAAO,CAACI,KAA5B;IAAA,WACGE,SAAS,iBAAE;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QADd,eAEE,QAAC,IAAD;MAAA,uBACE;QAAA,UAAKO;MAAL;QAAA;QAAA;QAAA;MAAA;IADF;MAAA;MAAA;MAAA;IAAA,QAFF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAQD,CA/CD;;GAAMV,c;;KAAAA,c;AAiDN,eAAeA,cAAf"},"metadata":{},"sourceType":"module"}